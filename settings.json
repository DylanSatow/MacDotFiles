{
    "python.defaultInterpreterPath": "~/miniconda3/bin/python",
    "latex-workshop.latex.clean.subfolder.enabled": true,
    "latex-workshop.latex.autoClean.run": "onBuilt",
    "[latex]": {
        "editor.defaultFormatter": "mathematic.vscode-latex"
    },
    "[python]": {
        "editor.defaultFormatter": "ms-python.autopep8"
    },
    "python.formatting.provider": "none",
    "notebook.lineNumbers": "on",
    "editor.inlineSuggest.enabled": true,
    "github.copilot.enable": {
        "*": false,
        "plaintext": false,
        "markdown": true,
        "scminput": false
    },
    "terminal.integrated.inheritEnv": false,
    "window.zoomLevel": 1,
    "latex-workshop.bind.enter.key": false,
    "latex-workshop.view.outline.sync.viewer": true,
    "latex-workshop.synctex.indicator.enabled": false,
    "workbench.editor.enablePreview": false,
    "editor.minimap.enabled": false,
    "latex-workshop.synctex.afterBuild.enabled": true,
    "github.copilot.editor.enableAutoCompletions": true,
    "leetcode.hint.configWebviewMarkdown": false,
    "leetcode.workspaceFolder": "/Users/dylansatow/.leetcode",
    "leetcode.hint.commentDescription": false,
    "leetcode.defaultLanguage": "python3",
    "workbench.iconTheme": "glyph.legacy",
    "workbench.colorTheme": "Catppuccin Frappé",
    "workbench.productIconTheme": "material-product-icons",
    "python.createEnvironment.trigger": "off",
    "security.promptForRemoteFileProtocolHandling": false,
    "files.associations": {
        "*.rmd": "markdown",
        "array": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "string": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numbers": "cpp",
        "ostream": "cpp",
        "semaphore": "cpp",
        "stdexcept": "cpp",
        "stop_token": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "typeinfo": "cpp",
        "__nullptr": "cpp",
        "iomanip": "cpp",
        "sstream": "cpp"
    },
    "workbench.sideBar.location": "right",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "latex-utilities.liveReformat.snippets": [
        
    
        
        {
            "prefix": "([A-Za-z}\\)\\]])(\\d)$",
            "body": "$1_$2",
            "mode": "maths",
            "triggerWhenComplete": true,
            "description": "auto subscript"
        },
        {
            "prefix": "([A-Za-z}\\)\\]]) ?_(\\d\\d)$",
            "body": "$1_{$2}",
            "mode": "maths",
            "triggerWhenComplete": true,
            "description": "auto escape subscript"
        },
        {
            "prefix": "(\\S) ([\\^_])$",
            "body": "$1$2",
            "mode": "maths",
            "triggerWhenComplete": true,
            "description": "remove extraneous sub/superscript space",
            "priority": 2
        },
        {
            "prefix": "([A-Za-z}\\)\\]]) ?\\^ ?(\\d\\d|[\\+\\-] ?(?:\\d|[A-Za-z]|\\\\\\w+))$",
            "body": "$1^{$2}",
            "mode": "maths",
            "triggerWhenComplete": true,
            "description": "auto escape superscript",
            "priority": 2
        },
        {
            "prefix": "([^ &\\\\\\+\\-=<>\\|!~@])([\\+\\-=<>])$",
            "body": "$1 $2",
            "mode": "maths",
            "priority": -1,
            "description": "whitespace before operators",
            "triggerWhenComplete": true
        },
        {
            "prefix": "([\\+\\-=<>])([^ &\\\\\\+\\-=<>\\|!~])$",
            "body": "$1 $2",
            "mode": "maths",
            "priority": -1,
            "description": "whitespace after operators",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\.\\.\\.$",
            "body": "\\dots ",
            "mode": "maths",
            "description": "⋯",
            "triggerWhenComplete": true
        },
        {
            "prefix": "=>$",
            "body": "\\implies ",
            "mode": "maths",
            "description": "⇒",
            "triggerWhenComplete": true
        },
        {
            "prefix": "=<$",
            "body": "\\impliedby ",
            "mode": "maths",
            "description": "implied by",
            "triggerWhenComplete": true
        },
        {
            "prefix": "//$",
            "body": "\\frac{$$1}{$$2} ",
            "mode": "maths",
            "description": "fraction (empty)",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(([\\d\\.]+)|([\\d\\.]*)(\\\\)?([A-Za-z]+)((\\^|_)(\\{\\d+\\}|\\d|[A-Za-z]|\\\\\\w+))*!?)\\/$",
            "body": "\\frac{$1}{$$1}$$0",
            "mode": "maths",
            "description": "fraction (from regex)",
            "triggerWhenComplete": true
        },
        {
            "prefix": "([\\)\\]}]) ?/$",
            "body": "SPECIAL_ACTION_FRACTION",
            "mode": "maths",
            "description": "fraction (parsed)",
            "triggerWhenComplete": true,
            "noPlaceholders": false
        },
        {
            "prefix": "sympy$",
            "body": "sympy $$1 sympy",
            "mode": "maths",
            "description": "sympy block",
            "triggerWhenComplete": false
        },
        {
            "prefix": "sympy.+$",
            "body": "SPECIAL_ACTION_BREAK",
            "mode": "maths",
            "triggerWhenComplete": true,
            "priority": 2
        },
        {
            "prefix": "sympy ?(.+?) ?sympy ?$",
            "body": "SPECIAL_ACTION_SYMPY",
            "mode": "maths",
            "priority": 3,
            "description": "sympy",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])\\biff$",
            "body": "$1\\iff ",
            "mode": "maths",
            "description": "⇔",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])\\binn$",
            "body": "$1\\in ",
            "mode": "maths",
            "description": "in",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])\\bnotin$",
            "body": "$1\\not\\in ",
            "mode": "maths",
            "description": "∈",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?!=$",
            "body": " \\neq ",
            "mode": "maths",
            "description": "neq",
            "triggerWhenComplete": true
        },
        {
            "prefix": "==$",
            "body": "&= ",
            "mode": "maths",
            "description": "aligned equal",
            "priority": 1,
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?~=$",
            "body": " \\approx ",
            "mode": "maths",
            "description": "≈",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?~~$",
            "body": " \\sim ",
            "mode": "maths",
            "description": "∼",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?>=$",
            "body": " \\geq ",
            "mode": "maths",
            "description": "≥",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?<=$",
            "body": " \\leq ",
            "mode": "maths",
            "description": "≤",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?>>$",
            "body": " \\gg ",
            "mode": "maths",
            "description": "≫",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?<<$",
            "body": " \\ll ",
            "mode": "maths",
            "description": "≪",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?xx$",
            "body": " \\times ",
            "mode": "maths",
            "description": "×",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?\\*\\*$",
            "body": " \\cdot ",
            "mode": "maths",
            "description": "⋅",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\]\\b|[ ,\\)\\]\\}]\\w*)(to|->)$",
            "body": "$1\\to ",
            "mode": "maths",
            "description": "→",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?(?:\\|->|!>)$",
            "body": " \\mapsto ",
            "mode": "maths",
            "description": "↦",
            "priority": 1.1,
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])a(?:rc)?(sin|cos|tan|cot|csc|sec)$",
            "body": "$1\\arc$2 ",
            "mode": "maths",
            "description": "arc(trig)",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])(sin|cos|tan|cot|csc|sec|min|max|log|exp)$",
            "body": "$1\\$2 ",
            "mode": "maths",
            "description": "un-backslashed operator",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])(pi)$",
            "body": "$1\\$2",
            "mode": "maths",
            "description": "pi",
            "triggerWhenComplete": true
        },
        {
            "prefix": "((?:\\b|\\\\)\\w{1,7})(,\\.|\\.,)$",
            "body": "\\vec{$1}",
            "mode": "maths",
            "description": "vector",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(\\\\?[\\w\\^]{1,7})~ $",
            "body": "\\tilde{$1}",
            "mode": "maths",
            "description": "tilde",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(\\\\?[\\w\\^]{1,7})\\. $",
            "body": "\\dot{$1}",
            "mode": "maths",
            "description": "dot",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(\\\\?[\\w\\^]{1,7})\\.\\. $",
            "body": "\\ddot{$1}",
            "mode": "maths",
            "description": "ddot",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bbar$",
            "body": "\\overline{$$1}",
            "mode": "maths",
            "description": "overline",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\b(\\\\?[\\w\\^{}]{1,3})bar$",
            "body": "\\overline{$1}",
            "mode": "maths",
            "description": "overline",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])\\bhat$",
            "body": "$1\\hat{$$1}",
            "mode": "maths",
            "description": "hat",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\b([\\w\\^{}])hat$",
            "body": "\\hat{$1}",
            "mode": "maths",
            "description": "hat",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\\\\\)(\\w)$",
            "body": "\\) $1",
            "mode": "any",
            "description": "space after inline maths",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\\\\\\\\\\\$",
            "body": "\\setminus ",
            "mode": "maths",
            "description": "∖ (setminus)",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bpmat$",
            "body": "\\begin{pmatrix} $$1 \\end{pmatrix} ",
            "mode": "maths",
            "description": "pmatrix",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bbmat$",
            "body": "\\begin{bmatrix} $$1 \\end{bmatrix} ",
            "mode": "maths",
            "description": "bmatrix",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bpart$",
            "body": "\\frac{\\partial $${1:V}}{\\partial $${2:x}} ",
            "mode": "maths",
            "description": "partial derivative",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bsq$",
            "body": "\\sqrt{$$1}",
            "mode": "maths",
            "description": "√",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?sr$",
            "body": "^2",
            "mode": "maths",
            "description": "²",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?cb$",
            "body": "^3",
            "mode": "maths",
            "description": "³",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bEE$",
            "body": "\\exists ",
            "mode": "maths",
            "description": "∃",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bAA$",
            "body": "\\forall ",
            "mode": "maths",
            "description": "∀",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\b([A-Za-z])([A-Za-z])\\2$",
            "body": "$1_$2",
            "mode": "maths",
            "description": "subscript letter",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\b([A-Za-z])([A-Za-z])\\2?p1$",
            "body": "$1_{$2+1}",
            "mode": "maths",
            "description": "subscript letter + 1",
            "priority": 2,
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bdint$",
            "body": "\\int_{$${1:-\\infty}}^{$${2:\\infty}} ",
            "mode": "maths",
            "description": "∫ₐᵇ",
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])  $",
            "body": "$1\\, ",
            "mode": "maths",
            "description": "add maths whitespace \\,",
            "priority": -1,
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])\\\\, {2,4}$",
            "body": "$1\\: ",
            "mode": "maths",
            "description": "add maths whitespace \\:",
            "priority": 0.1,
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])\\\\: {2,4}$",
            "body": "$1\\; ",
            "mode": "maths",
            "description": "add maths whitespace \\;",
            "priority": 0.2,
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])\\\\; {2,4}$",
            "body": "$1\\ ",
            "mode": "maths",
            "description": "add maths whitespace \\ ",
            "priority": 0.3,
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])\\\\ {2,4}$",
            "body": "$1\\quad ",
            "mode": "maths",
            "description": "add maths whitespace quad",
            "priority": 0.4,
            "triggerWhenComplete": true
        },
        {
            "prefix": "([^ \\\\])\\\\quad {2,4}$",
            "body": "$1\\qquad ",
            "mode": "maths",
            "description": "add maths whitespace qquad",
            "priority": 0.5,
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bset$",
            "body": "\\\\{$$1\\\\} ",
            "mode": "maths",
            "description": "set {}",
            "triggerWhenComplete": true
        },
        {
            "prefix": " ?\\|\\|$",
            "body": " \\mid ",
            "mode": "maths",
            "description": "∣",
            "triggerWhenComplete": true
        },
        {
            "prefix": "< ?>$",
            "body": "\\diamond ",
            "mode": "maths",
            "description": "⋄",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\bcase$",
            "body": "\\begin{cases} $$1 \\end{cases} ",
            "mode": "maths",
            "description": "cases",
            "triggerWhenComplete": true
        },
        {
            "prefix": "(^|[^\\\\])\\bst$",
            "body": "$1\\text{s.t.} ",
            "mode": "maths",
            "description": "such that",
            "triggerWhenComplete": true
        },
        {
            "prefix": "\\+ ?-$",
            "body": "\\pm ",
            "mode": "maths",
            "description": "±",
            "priority": 1,
            "triggerWhenComplete": true
        },
        {
            "prefix": "- ?\\+$",
            "body": "\\mp ",
            "mode": "maths",
            "description": "∓",
            "priority": 1,
            "triggerWhenComplete": true
        },
        {
            "prefix": "(?:([A-Za-z0-9]|\\\\\\w{,7})|\\(([^\\)]+)\\))C(?:([A-Za-z0-9]|\\\\\\w{,7})|\\(([^\\)]+)\\))$",
            "body": "\\binom{$1$2}{$3$4}",
            "mode": "maths",
            "priority": 2,
            "description": "binomial",
            "triggerWhenComplete": true
        }
    ],
    "latex-utilities.liveReformat.languages": [

        "tex",
        "doctex",
        "latex",
        "rsweave",
        "jlweave"
    ],
    "latex-utilities.liveReformat.enabled": true,
    "editor.suggest.showWords": false,
    "workbench.colorCustomizations": {},
    "security.workspace.trust.untrustedFiles": "open",
    "jupyter.askForKernelRestart": false,
    "diffEditor.codeLens": true,
    "git.mergeEditor": true,
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "workbench.activityBar.location": "top"
}